package com.lylx.leetcode.array

/**
 * 移动零
 *
 * 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。
 * 要求:
 *     a. 必须在原数组上操作，不能拷贝额外的数组。
 *     b. 尽量减少操作次数。
 *
 * 输入: [0,1,0,3,12]
 * 输出: [1,3,12,0,0]
 */
/**
 * 内存消耗：37.6 MB
 */
fun moveZeroes(nums: IntArray) {
    if (nums.size<=1 || !nums.contains(0)){
        return
    }
    val size = nums.size
    for (i in 0 until size - 1) {
        for (j in 0 until size - 1-i) {
            if (nums[j] == 0) {
                val temp = nums[j]
                nums[j] = nums[j + 1]
                nums[j + 1] = temp
            }
        }
    }
}

/**
 * 内存消耗：39.8 MB
 */
fun moveZeroes2(nums: IntArray) {
    if (nums.size<=1 || !nums.contains(0)){
        return
    }
    val size = nums.size
    var index = 0
    for (i in 0 until size) {
        if (nums[i] !== 0) {
            nums[index] = nums[i]
            index += 1
        }
    }
    for (i in index until size) {
        nums[i] = 0
    }
}

fun main(args: Array<String>) {
//    val nums = intArrayOf(0, 1, 0, 3, 12)
//    val nums = intArrayOf(0,0,1)
    val nums = intArrayOf(-959151711,623836953,209446690,-1950418142,1339915067,-733626417,481171539,-2125997010,-1225423476,1462109565,147434687,-1800073781,-1431212205,-450443973,50097298,753533734,-747189404,-2070885638,0,-1484353894,-340296594,-2133744570,619639811,-1626162038,669689561,0,112220218,502447212,-787793179,0,-726846372,-1611013491,204107194,1605165582,-566891128,2082852116,0,532995238,-1502590712,0,2136989777,-2031153343,371398938,-1907397429,342796391,609166045,-2007448660,-1096076344,-323570318,0,-2082980371,2129956379,-243553361,-1549960929,1502383415,0,-1394618779,694799815,78595689,-1439173023,-1416578800,685225786,-333502212,-1181308536,-380569313,772035354,0,-915266376,663709718,1443496021,-777017729,-883300731,-387828385,1907473488,-725483724,-972961871,-1255712537,383120918,1383877998,1722751914,0,-1156050682,1952527902,-560244497,1304305692,1173974542,-1313227247,-201476579,-298899493,-1828496581,-1724396350,1933643204,1531804925,1728655262,-955565449,0,-69843702,-461760848,268336768,1446130876)
    moveZeroes(nums)
//    moveZeroes2(nums)
    nums.mapIndexed { index, num ->
        print(num)
        if (index != nums.size - 1) {
            print(",")
        }
    }
}